# Сложность O(N)

class Solution:
    def getMaximumGenerated(self, n: int) -> int:
        nums = [0] * (n + 1)
        if n == 0:
            return 0  # Если длина nums будет равна нулю, то ответ будет равен нулю
        else:
            nums[1] = 1
            for i in range(2, n + 1):
                if (i % 2 == 0):
                    nums[i] = nums[i // 2]
                else:
                    nums[i] = nums[i // 2] + nums[(i // 2) + 1]

        return max(nums)
# С самого начала нам известно, что первый элемент списка равен 0, а второй равен 1.
# Дальше проходимся по циклу с третьего элемента, до последнего, если индекс чётный, то значение элемента под этим индексом будет равно значению элемента под индексом,который в 2 раза меньше, иначе, если номер индекса нечётный,то значение элемента под этим индексом будет равно сумме двух элементов, индексы которых будут соседними индексу,
# который в 2 раза меньше индекса элемент под которым нам надо найти.
